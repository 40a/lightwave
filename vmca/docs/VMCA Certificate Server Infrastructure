VMCA Certificate Server Infrastructure

Author : Anu Engineer
email : aengineer@vmware.com
Date : oct/31/2012


This document attempts to document the various important capabilities,
assumptions and also serves as a operations manual for
VMware Certification Authority (henceforth referenced as VMCA).

1. Definitions

Activation Data : Generally refers to the Private Key and Certificate that
VMCA needs to work.

Authentication : Refers to the process of establishing that a person or account
is indeed that person / account that it claims to be. In the specific context of
VMCA this means that we check against a kerberos server.

CA-Certificate : This is a certificate that is capable of issuing more Certificates.
This certificate can either be issued by some one CA ( making VMCA an intermediate CA Server)
or a self Signed CA Certificate, which means that the tree trust starts from that specific
instance of VMCA.

Certificate Chain or Path : A sequence of certificates that derive its authority from
the certificates before it. The path allows you to reach the Initial certificate object
in the path.

CA-Roles : In the Context of VMCA , these describe the different kinds of users
that VMCA is understands. The List of Roles that VMCA understands are

    Administrator/ Root : Root is the supreme entity and will be permitted to
    any operation that VMCA is capable of performing.

    Cert-Requester : This role is reserved for applications that has to ask for
    certificates on behalf of another entity. For Example, VPXD or Stateless.
    This role permits the user to ask certificates on behalf of other entities or
    revoke "any" ( Krishna :1 should we allow revocation of any certificate or only
    created by this service ? )

    Cert-User : This role is used by all applications that need to get certificates
    and revoke certificates for it own use.

    Cert-Backup : This role allows the user to read certificate database, perform maintenance
    like revoke and purge expired certificates, backup private key and CA-Certificate etc.


State Machine : Refers to the various states that VMCA can be in during its
operation.

2. Introduction

The primary purpose of VMCA is to issue certificates that allow various parts of VMware Stack to
establish trust to each other. This is achieved primarily by adding the VMCA Root CA certificate to
the trusted store of each computer that is part of the VMWare Software stack that runs in the data center.

The primary consumers of certificates from VMCA are services that run inside cloudVM(vcenterwindows). Some of these services request certificate to establish its own identity and some of these services request certificates for other entities that are participating in the VMware Stack.

2.1 Modes of Operation - Root CA and Intermediary CA

VMCA can operate in two modes, as a Root CA, from which all trust come up or as an intermediary CA of an enterprise CA. In the first mode, VMCA is initialised with a self signed certificate and in the second mode, an Enterprise CA signs the Certificate Signing Request (CSR) that the VMCA generates and the administrator configures VMCA to use this certificate and keys.

2.2 Certificate types and usage scenarios

The certificates that are issued to the primary service itself, will follow a X500 Name format, that will allow us to locate that service in the lotus directory. In other words, an service like SSO will be issued a certificate with the Subject Name as "CN=SSO, CN=Users, DC=LDU-xxxxxxxxxx, DC=vsphere, DC=local". This is a fully qualified Subject DN and for this certificate to be issued
the entity must exist in the Lotus directory ( Krishna : 2 Should we enforce this requirement ? )

The second type of certificates issued by VMCA are certificates that are issued on behalf of, which means that VMCA might have to issue certificates for entities that are not present in the directory.
In such cases, the identity and access levels of the requester is established before the certificate is issued. In those cases the Subject Name is generated by the requester and may not be in the X500 Format. To request for this second class of certificates the requester must have an
account in lotus and must also be a member in the Cert-Requester or CA-Administrator group.

At this point of time only two types of certificates key usages are supported by VMCA ( to be frank
all key usage sceneries are supported, however from the business perspective only 2 is required.)

They are

1) Certificates that establish Identity -- This is the most common form of certificate that is issued, and the general use case for this certificate is to establish the identity for the person/ Machine / Component that is using the certificate.

2) Certificates that allow Intermediary CAs to be established - In order for a certificate to be used for purposes for issuing further certificates, that certificate but contain a capability called CA Certificate. if a user wants to get a Certificate that can be used for seeding other
intermediary CAs, then the user has to be a Administrator.

Any other use of VMCA Certificate is prohibited in the 2014 release of VMCA ( or not tested). For example, Code Signing is not a supported use case for VMCA at this point of time.


3 Installation, Configuration and Access of VMCA

3.1  Dependencies
Under Linux VMCA relies on DCE-RPC and other service management functionality. It also relies on VMware Directory Service, VMware Kerberos Service for user authentication and access control. Hence all these components must be present on a machine before VMCA can successfully operate.

Under Windows RPC comes from the underlying windows hence the likewise is not needed, however VMware Directory Service and VMware Kerberos must be present for it to operate.

3.2 Startup - CloudVM and Private Setup

The Service after its installation does *not* autostart. The act of turning on the VMCA in the cloud VM is achieved by running vmca-first.py. This script initializes the VMCA with a self-singed
certificate and makes VMCA a Root CA. In fact the most important thing that this script does is to
run the command called "certool --selfca", which creates the self-signed certs and uploads the
certificate and private key to the Server.

if you want to make VMCA to be an intermediary CA ( Krishna 3: Work Flow for this needs to be defined with NGC: Shall I file a Bug or talk the team ? ), the certool supports the ability to generate a CSR which can be taken to the enterprise CA and get a certificate issued. ( test Bug 1: make sure that this scenario is covered. Hand tested with Microsoft CA and OpenSSL at this point of time.)

For any of these setup operations to be performed, the user must have Administrator privilege.

3.3 Access of VMCA

VMCA can be accessed via API or a command line tool at this point of time. The command line tool is called certool, please see the wiki for detailed information about the tool. This document refers to that tool to illustrate some use cases.

VMCA can also be accessed via APIs, currently we support APIs in C, Java and Python. A detailed spec of all these are available in the Wiki.

These API provide the ability to request new certificates and enumerate the current certificates issued by VMCA.

The notion of CRLs are provided by the enumeration APIs at this point of time ( Krishna 4: We should support proper CRLs or OCSP , that way we can make it easy for people to use VMCA )

(
  Bug: we need to have an API called CertificateStatus, enumeration takes too long if you have
  1000s of certificates, we also need more capability to get revoked certs, for example, get revoked certs after a date
)


4. Identity in VMCA

4.1 Initial Identities and Identity Validation

All identity in VMCA comes from VMware Kerberos and VMware Lotus directory server. In the first boot scripts the Identity of VMCA is itself established (Bug :Create VMCA Account for the first
boot) and all other accounts like ( VPXD, Stateless etc ) also needs to be created in the first boots. Currently the SSO Solution user accounts would be a good candidate to make it to a list of
CA-Users. ( Krishna 6 : Open issue how to add users as CA-Requester ?)

==> Please Note : There is no validation here since this is part of BootStrap and all of this is identities are established under the creds that flow down from the NGC, which would be the Admin creds for Lotus and Kerberos.

<==


The CA-Requesters and Administrators will have the ability to get certificates on other users behalf and they will also be able to revoke any certificate at will.

(We do not support re-keying or renewing certificate at this point of time, Krishna: 7 good to have, if we support these features they will follow the same identities)


Once the Identities are inside Lotus directory server, all communication with VMCA will be secured using GSSAPI which means that the act of establishing the identity is completely orthogonal to the VMCA. VMCA will rely on VMware Kerberos to establish the identity of the entity that is communicating with VMCA. All communication on wire will be encrypted using GSSAPI. Once this identity is validated, VMCA will check against the ACLs chains that it maintains itself. Without passing the validation checks for Authentication and Authorization no action can be performed against VMCA.


( Krishna 9: should we have just one lib for ACLs this? since lots of services eventually will need to do this ? ).

4.2 Certificate Names

As discussed earlier, VMCA certificates can have two naming conventions, X500 for entities that our directory server knows about, and some ASCII strings for things that are not known. However the only way to get certificates for objects that are in inside the Lotus Directory Server is to be a CA-Requester and ask for certificates.

==> There are *NO* guarantees that second form of certificates will have meaningful names or *UNIQUE* ( Krishna 8: comment ? ) <==


5.  Certificate Life-Cycle

5.1 Private Keys
    In order to request a certificate the requesting application must create private keys ( any key length less than 1024 will be rejected) the default length of Keys is 2048 bits. It is the responsibility of the application to maintain the passwords securely ( Bug : Support passwords for keys -- Not supported right now).

5.2 Certificate Requests

    Once the passwords are generated the application creates a Certificate Signing Request ( CSR -PKCS#10) which is cross signed with the applications private key. This operation is performed completely with the client machine. Once the CSR is created the Client machine connects to VMCA Server ( using GSSAPI to make it secure) and send the request to the Server.

5.3 Certificate Issuance

    Once a CSR is received the VMCA server validates the Principal which it is communicating with, once the identity is established VMCA checks the ACLs to make sure that the principal that it is communicating with is authorized to perform the requested action.

    if the Access Checks succeed, then certificate specific properties are checked. The major properties checked by VMCA are

    1) No * in Subject Alt Name
    2) *.Domain Name is allowed if the Current Domain that VMCA is operating is same.
    3) The life time of the certificate requested is less than the life time of the Root CA certificate

    VMCA uses a synchronous mechanism to issue certificates, so there is no need to check for the status of a CSR.

    At this point of time VMCA does not publish the certificate to Lotus even if it is type one (X500 Named) certificate. This might change in future. ( krishna : 10 should we do this ? )


5.4 Certificate Renewal , Re-Key and Modification

    VMCA does *not* support renewal, Re-Key or Modification of certificates, the only way to alter a certificate is to revoke the certificate and issue a new certificate with the changes needed.

    The Client (certool) plans to provide a way to read from a certificate and create a CSR directly to make it easy to re-issue certificates when they expire. it is not a supported feature yet.

5.5 Certificate Revocation and Suspension

    VMCA does *not* support Suspension of certificates, the only way a certificate can be rendered useless is to revoke it. In order to revoke a certificate, either you must be the owner of the certificate ( that is a certificate that is issued to you on your name), or must have CA-Requester or have higher privileges. Just like certificate issue, certificate revocation is also synchronous and instantaneous in the case of VMCA.


5.6 Propagation of Revoked Certificates

    Since VMCA provides certification enumeration APIs the CRL list is always up-to-date. The Clients who use VMCA is expected to make frequent queries to retrieve a list of expired or revoked certificates.

5.7 Certificate Status Check API

    Along with Enumerate certificate API, VMCA also offers a Check Status API for a certificate.
    ( Bug : make this API work correctly and write tests)

6.VMCA Management and Operational Aspects

6.1 Security Requirement

    VMCA relies on the physical machines OS to secure its key assets, if Root Access is ever given to the machine where VMCA is installed then it is possible for the person with root access to read he CA's Root Key. Hence all access is to monitored, logged and carefully controlled.

6.2 Login Access Control
    All  login to the machine should be audited and controlled which is beyond the scope of VMC.



7. Audit and Logging

7.1 Audit log
    VMCA will audit all the actions performed by VMCA, and along with who performed the action.
    This log file can be retrieved using VMCA, if you have administrative privileges.
    ( Krishna : 10 , comment ?) . Following are the major pieces of information that is audited.

    1) All certificate life cycle actions
    2) All Administrative operations

7.2 Audit log rotation
    VMCA would delete the Audit logs once the default Audit log size are reached. ( Krishna 11 : comments ? ). By default VMCA maintains 10 MB of logs at any given time.


8. Root Key Expiration
    Currently VMCA supports a single Root Key. This needs to change to support multiple Root CA keys that we can support Root Key rotation. ( Bug : Support Multiple Root CA Keys.) Current we create Root CA keys valid for 10 years and this problem is not immediate.

    Even though VMCA supports the ability to update Root CA certificate, it is not exposed via Certool. ( Bug : Support the ability to over write Root CA Cert in Certool), however currently we support only one Root CA Cert.

    if you need to do this right now before the certool supports this feature, you can always overwrite the files in /var/lib/vmware/*.pem and *.crt files for the private key and certificate



9. Compromise and Disaster Recovery

    In the event of a Root Key Compromise, we will need all users of VMCA to revoke the Root CA key, and initialize the system with new key. ( Certool should support the Root Key Overwrite).

    In the specific case, we probably need a VPXD workflow that allows us to overwrite the Root CA
    key on all ESX machines. it will probably be as simple as telling hostd to fetch the new Root CA cert and delete the old from the trusted Store.
    ( Krishna 12 : comments ? File a bug against VPXD ? )



10. CA termination

    In the event of CA termination , the right approach would be to remove the Root Key of that CA from all machines that trust this CA. In our case this would be a VPXD work flow.


Assertions

1) Only Cert-Requestor or above groups can request on behalf certificates
2) Only Administrator can request CA Certs
3) Certificates with accounts in lotus will have certs in X500 Format
4) Certificates that CA-Request group can request need not have X500 Format
5) Certs are either for establishing identity or for Intermediary CAs. All other use of certificate
is not supported.
6) Init Operations can be performed only by Administrators
7) Certificate life times are bound by the life time of the Root CA Certificate.



Open Issues :

1) How to add users as CA-Requesters



